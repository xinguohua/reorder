RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m * Swap
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m * Depend
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m * Depend
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m * Swap
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m * Swap
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m * Swap
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m * Swap
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m * Swap
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m * Swap
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m * Depend
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m * Depend
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m * Depend
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m * Swap
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m * Depend
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m * Depend
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m * Swap
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m * Depend
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m * Depend
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and   (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
) (and   (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)) ))


  Switch Pair: Pair[Node: gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Swap
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Depend
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m * Swap
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x15-1 Int)
(declare-const x16-1 Int)
(declare-const x17-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x23-1 Int)
(declare-const x24-1 Int)
(declare-const x25-1 Int)
(declare-const x28-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x8-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x15-1)))
(assert (not (= x1-0 x16-1)))
(assert (not (= x1-0 x17-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x23-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x25-1)))
(assert (not (= x1-0 x28-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x8-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x15-1)))
(assert (not (= x2-0 x16-1)))
(assert (not (= x2-0 x17-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x23-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x25-1)))
(assert (not (= x2-0 x28-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x8-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x15-1)))
(assert (not (= x39-0 x16-1)))
(assert (not (= x39-0 x17-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x23-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x25-1)))
(assert (not (= x39-0 x28-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x8-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x15-1)))
(assert (not (= x76-0 x16-1)))
(assert (not (= x76-0 x17-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x23-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x25-1)))
(assert (not (= x76-0 x28-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x8-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x15-1)))
(assert (not (= x80-0 x16-1)))
(assert (not (= x80-0 x17-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x23-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x25-1)))
(assert (not (= x80-0 x28-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x8-2)))
(assert (not (= x1-1 x15-1)))
(assert (not (= x1-1 x16-1)))
(assert (not (= x1-1 x17-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x23-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x25-1)))
(assert (not (= x1-1 x28-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x8-2)))
(assert (not (= x15-1 x16-1)))
(assert (not (= x15-1 x17-1)))
(assert (not (= x15-1 x18-1)))
(assert (not (= x15-1 x19-1)))
(assert (not (= x15-1 x20-1)))
(assert (not (= x15-1 x21-1)))
(assert (not (= x15-1 x22-1)))
(assert (not (= x15-1 x23-1)))
(assert (not (= x15-1 x24-1)))
(assert (not (= x15-1 x25-1)))
(assert (not (= x15-1 x28-1)))
(assert (not (= x15-1 x1-2)))
(assert (not (= x15-1 x4-2)))
(assert (not (= x15-1 x5-2)))
(assert (not (= x15-1 x8-2)))
(assert (not (= x16-1 x17-1)))
(assert (not (= x16-1 x18-1)))
(assert (not (= x16-1 x19-1)))
(assert (not (= x16-1 x20-1)))
(assert (not (= x16-1 x21-1)))
(assert (not (= x16-1 x22-1)))
(assert (not (= x16-1 x23-1)))
(assert (not (= x16-1 x24-1)))
(assert (not (= x16-1 x25-1)))
(assert (not (= x16-1 x28-1)))
(assert (not (= x16-1 x1-2)))
(assert (not (= x16-1 x4-2)))
(assert (not (= x16-1 x5-2)))
(assert (not (= x16-1 x8-2)))
(assert (not (= x17-1 x18-1)))
(assert (not (= x17-1 x19-1)))
(assert (not (= x17-1 x20-1)))
(assert (not (= x17-1 x21-1)))
(assert (not (= x17-1 x22-1)))
(assert (not (= x17-1 x23-1)))
(assert (not (= x17-1 x24-1)))
(assert (not (= x17-1 x25-1)))
(assert (not (= x17-1 x28-1)))
(assert (not (= x17-1 x1-2)))
(assert (not (= x17-1 x4-2)))
(assert (not (= x17-1 x5-2)))
(assert (not (= x17-1 x8-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x23-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x25-1)))
(assert (not (= x18-1 x28-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x8-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x23-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x25-1)))
(assert (not (= x19-1 x28-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x8-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x23-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x25-1)))
(assert (not (= x20-1 x28-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x8-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x23-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x25-1)))
(assert (not (= x21-1 x28-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x8-2)))
(assert (not (= x22-1 x23-1)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x25-1)))
(assert (not (= x22-1 x28-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x8-2)))
(assert (not (= x23-1 x24-1)))
(assert (not (= x23-1 x25-1)))
(assert (not (= x23-1 x28-1)))
(assert (not (= x23-1 x1-2)))
(assert (not (= x23-1 x4-2)))
(assert (not (= x23-1 x5-2)))
(assert (not (= x23-1 x8-2)))
(assert (not (= x24-1 x25-1)))
(assert (not (= x24-1 x28-1)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x8-2)))
(assert (not (= x25-1 x28-1)))
(assert (not (= x25-1 x1-2)))
(assert (not (= x25-1 x4-2)))
(assert (not (= x25-1 x5-2)))
(assert (not (= x25-1 x8-2)))
(assert (not (= x28-1 x1-2)))
(assert (not (= x28-1 x4-2)))
(assert (not (= x28-1 x5-2)))
(assert (not (= x28-1 x8-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x8-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x8-2)))
(assert (not (= x5-2 x8-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x8-2))
(assert(< x4-2 x8-2))
(assert(< x5-2 x8-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x8-2))
(assert(< x1-1 x15-1))
(assert(< x1-1 x16-1))
(assert(< x1-1 x17-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x23-1))
(assert(< x1-1 x24-1))
(assert(< x1-1 x25-1))
(assert(< x1-1 x28-1))
(assert(< x15-1 x28-1))
(assert(< x16-1 x28-1))
(assert(< x17-1 x28-1))
(assert(< x18-1 x28-1))
(assert(< x19-1 x28-1))
(assert(< x20-1 x28-1))
(assert(< x21-1 x28-1))
(assert(< x22-1 x28-1))
(assert(< x23-1 x28-1))
(assert(< x24-1 x28-1))
(assert(< x25-1 x28-1))
(assert(< x1-1 x15-1))
(assert(< x15-1 x16-1))
(assert(< x16-1 x17-1))
(assert(< x17-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x23-1))
(assert(< x23-1 x24-1))
(assert(< x24-1 x25-1))
(assert(< x25-1 x28-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x28-1 x76-0 ))
(assert (< x8-2 x80-0 ))

violateStr: (assert (or (and (not (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
)(not (and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
) (< x4-2 x25-1)
  ) (and (and (< x15-1 x16-1)
 (or (< x16-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x17-1)
 (or (< x17-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x18-1)
 (or (< x18-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x19-1)
 (or (< x19-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x20-1)
 (or (< x20-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x21-1)
 (or (< x21-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x22-1)
 (or (< x22-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x15-1 x23-1)
 (or (< x23-1 x5-2) (< x5-2 x15-1 ))
 )
(and (< x5-2 x24-1)
 (or (< x24-1 x15-1) (< x15-1 x5-2 ))
 )
 (not (< x4-2 x25-1)
)  ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c , Node: gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c ]
  Depend Pair: Pair[Node: gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  , Node: gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 517[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x15-1    gid: 15 #1   pc:0x4c31bf W  addr:21875192  len: 1 value:1 order:509 line:33 File:6-ompi.c  [0m
[32m    x16-1    gid: 16 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 512 line:37 File: 6-ompi.c  [0m * Depend
[32m    x17-1    gid: 17 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 514 line:37 File: 6-ompi.c  [0m
[32m    x18-1    gid: 18 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1054 line:37 File: 6-ompi.c  [0m
[32m    x19-1    gid: 19 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1057 line:37 File: 6-ompi.c  [0m
[32m    x20-1    gid: 20 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1065 line:37 File: 6-ompi.c  [0m
[32m    x21-1    gid: 21 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1067 line:37 File: 6-ompi.c  [0m
[32m    x22-1    gid: 22 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1069 line:37 File: 6-ompi.c  [0m
[32m    x23-1    gid: 23 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:1 order: 1071 line:37 File: 6-ompi.c  [0m
[33m    x1-2    gid: 1 #2   begin order: 1053[0m
[33m    x5-2    gid: 5 #2   pc:0x4c33cf W  addr:21875192  len: 1 value:0 order:1079 line:58 File:6-ompi.c [0m * Swap
[32m    x24-1    gid: 24 #1   pc:0x4c31f3  R   addr:21875192  len: 1 value:0 order: 1086 line:37 File: 6-ompi.c  [0m
[32m    x25-1    gid: 25 #1   pc:0x4c323e  R   addr:21875196  len: 4 value:0 order: 1087 line:42 File: 6-ompi.c  [0m * Depend
[32m    x28-1    gid: 28 #1   end order:1093[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1095[0m
[33m    x4-2    gid: 4 #2   pc:0x4c339d W  addr:21875196  len: 4 value:0 order:1076 line:55 File:6-ompi.c [0m * Swap
[33m    x8-2    gid: 8 #2   end order:1085[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1100[0m

