RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)   (< x10-1 x18-1)
(< x21-1 x22-1)
) (and (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
   (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)) ))


  Switch Pair: Pair[Node: gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Depend Pair: Pair[Node: gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ , Node: gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m * Depend
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m * Depend
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Swap
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m * Swap
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 ) (and  (< x10-1 x18-1)
(< x21-1 x22-1)
 (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ ]
  Depend Pair: Pair[Node: gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ , Node: gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m * Depend
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m * Depend
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m * Swap
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Swap
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)   (< x10-1 x18-1)
(< x21-1 x22-1)
) (and (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
   (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)) ))


  Switch Pair: Pair[Node: gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m * Depend
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Swap
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m * Swap
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)   (< x10-1 x18-1)
(< x21-1 x22-1)
) (and (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
   (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)) ))


  Switch Pair: Pair[Node: gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Depend Pair: Pair[Node: gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ , Node: gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m * Depend
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m * Depend
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Swap
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m * Swap
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)   (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
) (and (< x10-1 x18-1)
(< x21-1 x22-1)
   (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)) ))


  Switch Pair: Pair[Node: gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ , Node: gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ ]
  Depend Pair: Pair[Node: gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ , Node: gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m * Depend
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m * Depend
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m * Swap
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m * Swap
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 ) (and  (< x10-1 x18-1)
(< x21-1 x22-1)
 (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ ]
  Depend Pair: Pair[Node: gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m * Depend
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m * Swap
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Swap
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Depend
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) (< x10-1 x18-1)
(< x21-1 x22-1)
 ) (and  (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) ) ))


  Switch Pair: Pair[Node: gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ , Node: gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ ]
  Depend Pair: Pair[Node: gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ , Node: gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m * Swap
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m * Swap
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m * Depend
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m * Depend
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)   (< x10-1 x18-1)
(< x21-1 x22-1)
) (and (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
   (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)) ))


  Switch Pair: Pair[Node: gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ , Node: gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m * Swap
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m * Swap
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m * Depend
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)   (< x10-1 x18-1)
(< x21-1 x22-1)
) (and (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
   (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)) ))


  Switch Pair: Pair[Node: gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m * Depend
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Swap
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m * Swap
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 ) (and  (< x10-1 x18-1)
(< x21-1 x22-1)
 (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ ]
  Depend Pair: Pair[Node: gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ , Node: gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m * Depend
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m * Depend
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m * Swap
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Swap
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) (< x10-1 x18-1)
(< x21-1 x22-1)
 ) (and  (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) ) ))


  Switch Pair: Pair[Node: gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ , Node: gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ ]
  Depend Pair: Pair[Node: gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ , Node: gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m * Swap
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m * Swap
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m * Depend
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m * Depend
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)   (< x10-1 x18-1)
(< x21-1 x22-1)
) (and (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
   (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)) ))


  Switch Pair: Pair[Node: gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m * Depend
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Swap
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m * Swap
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)   (< x10-1 x18-1)
(< x21-1 x22-1)
) (and (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
   (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)) ))


  Switch Pair: Pair[Node: gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m * Depend
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Swap
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m * Swap
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 ) (and  (< x10-1 x18-1)
(< x21-1 x22-1)
 (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ ]
  Depend Pair: Pair[Node: gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m * Depend
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m * Swap
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Swap
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Depend
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 ) (and  (< x10-1 x18-1)
(< x21-1 x22-1)
 (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ ]
  Depend Pair: Pair[Node: gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m * Depend
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m * Swap
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Swap
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Depend
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 ) (and  (< x10-1 x18-1)
(< x21-1 x22-1)
 (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) ) ))


  Switch Pair: Pair[Node: gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ , Node: gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ ]
  Depend Pair: Pair[Node: gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m * Depend
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m * Swap
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m * Swap
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Depend
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 ) (and  (< x10-1 x18-1)
(< x21-1 x22-1)
 (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) ) ))


  Switch Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ ]
  Depend Pair: Pair[Node: gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m * Depend
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m * Swap
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Swap
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Depend
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and  (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
) (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
 ) (and  (< x10-1 x18-1)
(< x21-1 x22-1)
 (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
) ) ))


  Switch Pair: Pair[Node: gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ , Node: gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ ]
  Depend Pair: Pair[Node: gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ , Node: gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m * Depend
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m * Swap
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m * Swap
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m * Depend
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x8-1 x9-1))
(assert(< x9-1 x10-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)   (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
) (and (< x10-1 x18-1)
(< x21-1 x22-1)
   (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)) ))


  Switch Pair: Pair[Node: gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ , Node: gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ ]
  Depend Pair: Pair[Node: gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ , Node: gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m * Depend
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m * Depend
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m * Swap
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m * Swap
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

RawReorder:
  constr: CONS_SETLOGIC: (set-logic QF_IDL)

constrDeclare: (declare-const x1-0 Int)
(declare-const x2-0 Int)
(declare-const x39-0 Int)
(declare-const x76-0 Int)
(declare-const x80-0 Int)
(declare-const x1-1 Int)
(declare-const x7-1 Int)
(declare-const x8-1 Int)
(declare-const x9-1 Int)
(declare-const x10-1 Int)
(declare-const x18-1 Int)
(declare-const x19-1 Int)
(declare-const x20-1 Int)
(declare-const x21-1 Int)
(declare-const x22-1 Int)
(declare-const x24-1 Int)
(declare-const x1-2 Int)
(declare-const x4-2 Int)
(declare-const x5-2 Int)
(declare-const x6-2 Int)
(declare-const x10-2 Int)
(declare-const x11-2 Int)
(declare-const x12-2 Int)
(declare-const x16-2 Int)
(declare-const x18-2 Int)
(assert (not (= x1-0 x2-0)))
(assert (not (= x1-0 x39-0)))
(assert (not (= x1-0 x76-0)))
(assert (not (= x1-0 x80-0)))
(assert (not (= x1-0 x1-1)))
(assert (not (= x1-0 x7-1)))
(assert (not (= x1-0 x8-1)))
(assert (not (= x1-0 x9-1)))
(assert (not (= x1-0 x10-1)))
(assert (not (= x1-0 x18-1)))
(assert (not (= x1-0 x19-1)))
(assert (not (= x1-0 x20-1)))
(assert (not (= x1-0 x21-1)))
(assert (not (= x1-0 x22-1)))
(assert (not (= x1-0 x24-1)))
(assert (not (= x1-0 x1-2)))
(assert (not (= x1-0 x4-2)))
(assert (not (= x1-0 x5-2)))
(assert (not (= x1-0 x6-2)))
(assert (not (= x1-0 x10-2)))
(assert (not (= x1-0 x11-2)))
(assert (not (= x1-0 x12-2)))
(assert (not (= x1-0 x16-2)))
(assert (not (= x1-0 x18-2)))
(assert (not (= x2-0 x39-0)))
(assert (not (= x2-0 x76-0)))
(assert (not (= x2-0 x80-0)))
(assert (not (= x2-0 x1-1)))
(assert (not (= x2-0 x7-1)))
(assert (not (= x2-0 x8-1)))
(assert (not (= x2-0 x9-1)))
(assert (not (= x2-0 x10-1)))
(assert (not (= x2-0 x18-1)))
(assert (not (= x2-0 x19-1)))
(assert (not (= x2-0 x20-1)))
(assert (not (= x2-0 x21-1)))
(assert (not (= x2-0 x22-1)))
(assert (not (= x2-0 x24-1)))
(assert (not (= x2-0 x1-2)))
(assert (not (= x2-0 x4-2)))
(assert (not (= x2-0 x5-2)))
(assert (not (= x2-0 x6-2)))
(assert (not (= x2-0 x10-2)))
(assert (not (= x2-0 x11-2)))
(assert (not (= x2-0 x12-2)))
(assert (not (= x2-0 x16-2)))
(assert (not (= x2-0 x18-2)))
(assert (not (= x39-0 x76-0)))
(assert (not (= x39-0 x80-0)))
(assert (not (= x39-0 x1-1)))
(assert (not (= x39-0 x7-1)))
(assert (not (= x39-0 x8-1)))
(assert (not (= x39-0 x9-1)))
(assert (not (= x39-0 x10-1)))
(assert (not (= x39-0 x18-1)))
(assert (not (= x39-0 x19-1)))
(assert (not (= x39-0 x20-1)))
(assert (not (= x39-0 x21-1)))
(assert (not (= x39-0 x22-1)))
(assert (not (= x39-0 x24-1)))
(assert (not (= x39-0 x1-2)))
(assert (not (= x39-0 x4-2)))
(assert (not (= x39-0 x5-2)))
(assert (not (= x39-0 x6-2)))
(assert (not (= x39-0 x10-2)))
(assert (not (= x39-0 x11-2)))
(assert (not (= x39-0 x12-2)))
(assert (not (= x39-0 x16-2)))
(assert (not (= x39-0 x18-2)))
(assert (not (= x76-0 x80-0)))
(assert (not (= x76-0 x1-1)))
(assert (not (= x76-0 x7-1)))
(assert (not (= x76-0 x8-1)))
(assert (not (= x76-0 x9-1)))
(assert (not (= x76-0 x10-1)))
(assert (not (= x76-0 x18-1)))
(assert (not (= x76-0 x19-1)))
(assert (not (= x76-0 x20-1)))
(assert (not (= x76-0 x21-1)))
(assert (not (= x76-0 x22-1)))
(assert (not (= x76-0 x24-1)))
(assert (not (= x76-0 x1-2)))
(assert (not (= x76-0 x4-2)))
(assert (not (= x76-0 x5-2)))
(assert (not (= x76-0 x6-2)))
(assert (not (= x76-0 x10-2)))
(assert (not (= x76-0 x11-2)))
(assert (not (= x76-0 x12-2)))
(assert (not (= x76-0 x16-2)))
(assert (not (= x76-0 x18-2)))
(assert (not (= x80-0 x1-1)))
(assert (not (= x80-0 x7-1)))
(assert (not (= x80-0 x8-1)))
(assert (not (= x80-0 x9-1)))
(assert (not (= x80-0 x10-1)))
(assert (not (= x80-0 x18-1)))
(assert (not (= x80-0 x19-1)))
(assert (not (= x80-0 x20-1)))
(assert (not (= x80-0 x21-1)))
(assert (not (= x80-0 x22-1)))
(assert (not (= x80-0 x24-1)))
(assert (not (= x80-0 x1-2)))
(assert (not (= x80-0 x4-2)))
(assert (not (= x80-0 x5-2)))
(assert (not (= x80-0 x6-2)))
(assert (not (= x80-0 x10-2)))
(assert (not (= x80-0 x11-2)))
(assert (not (= x80-0 x12-2)))
(assert (not (= x80-0 x16-2)))
(assert (not (= x80-0 x18-2)))
(assert (not (= x1-1 x7-1)))
(assert (not (= x1-1 x8-1)))
(assert (not (= x1-1 x9-1)))
(assert (not (= x1-1 x10-1)))
(assert (not (= x1-1 x18-1)))
(assert (not (= x1-1 x19-1)))
(assert (not (= x1-1 x20-1)))
(assert (not (= x1-1 x21-1)))
(assert (not (= x1-1 x22-1)))
(assert (not (= x1-1 x24-1)))
(assert (not (= x1-1 x1-2)))
(assert (not (= x1-1 x4-2)))
(assert (not (= x1-1 x5-2)))
(assert (not (= x1-1 x6-2)))
(assert (not (= x1-1 x10-2)))
(assert (not (= x1-1 x11-2)))
(assert (not (= x1-1 x12-2)))
(assert (not (= x1-1 x16-2)))
(assert (not (= x1-1 x18-2)))
(assert (not (= x7-1 x8-1)))
(assert (not (= x7-1 x9-1)))
(assert (not (= x7-1 x10-1)))
(assert (not (= x7-1 x18-1)))
(assert (not (= x7-1 x19-1)))
(assert (not (= x7-1 x20-1)))
(assert (not (= x7-1 x21-1)))
(assert (not (= x7-1 x22-1)))
(assert (not (= x7-1 x24-1)))
(assert (not (= x7-1 x1-2)))
(assert (not (= x7-1 x4-2)))
(assert (not (= x7-1 x5-2)))
(assert (not (= x7-1 x6-2)))
(assert (not (= x7-1 x10-2)))
(assert (not (= x7-1 x11-2)))
(assert (not (= x7-1 x12-2)))
(assert (not (= x7-1 x16-2)))
(assert (not (= x7-1 x18-2)))
(assert (not (= x8-1 x9-1)))
(assert (not (= x8-1 x10-1)))
(assert (not (= x8-1 x18-1)))
(assert (not (= x8-1 x19-1)))
(assert (not (= x8-1 x20-1)))
(assert (not (= x8-1 x21-1)))
(assert (not (= x8-1 x22-1)))
(assert (not (= x8-1 x24-1)))
(assert (not (= x8-1 x1-2)))
(assert (not (= x8-1 x4-2)))
(assert (not (= x8-1 x5-2)))
(assert (not (= x8-1 x6-2)))
(assert (not (= x8-1 x10-2)))
(assert (not (= x8-1 x11-2)))
(assert (not (= x8-1 x12-2)))
(assert (not (= x8-1 x16-2)))
(assert (not (= x8-1 x18-2)))
(assert (not (= x9-1 x10-1)))
(assert (not (= x9-1 x18-1)))
(assert (not (= x9-1 x19-1)))
(assert (not (= x9-1 x20-1)))
(assert (not (= x9-1 x21-1)))
(assert (not (= x9-1 x22-1)))
(assert (not (= x9-1 x24-1)))
(assert (not (= x9-1 x1-2)))
(assert (not (= x9-1 x4-2)))
(assert (not (= x9-1 x5-2)))
(assert (not (= x9-1 x6-2)))
(assert (not (= x9-1 x10-2)))
(assert (not (= x9-1 x11-2)))
(assert (not (= x9-1 x12-2)))
(assert (not (= x9-1 x16-2)))
(assert (not (= x9-1 x18-2)))
(assert (not (= x10-1 x18-1)))
(assert (not (= x10-1 x19-1)))
(assert (not (= x10-1 x20-1)))
(assert (not (= x10-1 x21-1)))
(assert (not (= x10-1 x22-1)))
(assert (not (= x10-1 x24-1)))
(assert (not (= x10-1 x1-2)))
(assert (not (= x10-1 x4-2)))
(assert (not (= x10-1 x5-2)))
(assert (not (= x10-1 x6-2)))
(assert (not (= x10-1 x10-2)))
(assert (not (= x10-1 x11-2)))
(assert (not (= x10-1 x12-2)))
(assert (not (= x10-1 x16-2)))
(assert (not (= x10-1 x18-2)))
(assert (not (= x18-1 x19-1)))
(assert (not (= x18-1 x20-1)))
(assert (not (= x18-1 x21-1)))
(assert (not (= x18-1 x22-1)))
(assert (not (= x18-1 x24-1)))
(assert (not (= x18-1 x1-2)))
(assert (not (= x18-1 x4-2)))
(assert (not (= x18-1 x5-2)))
(assert (not (= x18-1 x6-2)))
(assert (not (= x18-1 x10-2)))
(assert (not (= x18-1 x11-2)))
(assert (not (= x18-1 x12-2)))
(assert (not (= x18-1 x16-2)))
(assert (not (= x18-1 x18-2)))
(assert (not (= x19-1 x20-1)))
(assert (not (= x19-1 x21-1)))
(assert (not (= x19-1 x22-1)))
(assert (not (= x19-1 x24-1)))
(assert (not (= x19-1 x1-2)))
(assert (not (= x19-1 x4-2)))
(assert (not (= x19-1 x5-2)))
(assert (not (= x19-1 x6-2)))
(assert (not (= x19-1 x10-2)))
(assert (not (= x19-1 x11-2)))
(assert (not (= x19-1 x12-2)))
(assert (not (= x19-1 x16-2)))
(assert (not (= x19-1 x18-2)))
(assert (not (= x20-1 x21-1)))
(assert (not (= x20-1 x22-1)))
(assert (not (= x20-1 x24-1)))
(assert (not (= x20-1 x1-2)))
(assert (not (= x20-1 x4-2)))
(assert (not (= x20-1 x5-2)))
(assert (not (= x20-1 x6-2)))
(assert (not (= x20-1 x10-2)))
(assert (not (= x20-1 x11-2)))
(assert (not (= x20-1 x12-2)))
(assert (not (= x20-1 x16-2)))
(assert (not (= x20-1 x18-2)))
(assert (not (= x21-1 x22-1)))
(assert (not (= x21-1 x24-1)))
(assert (not (= x21-1 x1-2)))
(assert (not (= x21-1 x4-2)))
(assert (not (= x21-1 x5-2)))
(assert (not (= x21-1 x6-2)))
(assert (not (= x21-1 x10-2)))
(assert (not (= x21-1 x11-2)))
(assert (not (= x21-1 x12-2)))
(assert (not (= x21-1 x16-2)))
(assert (not (= x21-1 x18-2)))
(assert (not (= x22-1 x24-1)))
(assert (not (= x22-1 x1-2)))
(assert (not (= x22-1 x4-2)))
(assert (not (= x22-1 x5-2)))
(assert (not (= x22-1 x6-2)))
(assert (not (= x22-1 x10-2)))
(assert (not (= x22-1 x11-2)))
(assert (not (= x22-1 x12-2)))
(assert (not (= x22-1 x16-2)))
(assert (not (= x22-1 x18-2)))
(assert (not (= x24-1 x1-2)))
(assert (not (= x24-1 x4-2)))
(assert (not (= x24-1 x5-2)))
(assert (not (= x24-1 x6-2)))
(assert (not (= x24-1 x10-2)))
(assert (not (= x24-1 x11-2)))
(assert (not (= x24-1 x12-2)))
(assert (not (= x24-1 x16-2)))
(assert (not (= x24-1 x18-2)))
(assert (not (= x1-2 x4-2)))
(assert (not (= x1-2 x5-2)))
(assert (not (= x1-2 x6-2)))
(assert (not (= x1-2 x10-2)))
(assert (not (= x1-2 x11-2)))
(assert (not (= x1-2 x12-2)))
(assert (not (= x1-2 x16-2)))
(assert (not (= x1-2 x18-2)))
(assert (not (= x4-2 x5-2)))
(assert (not (= x4-2 x6-2)))
(assert (not (= x4-2 x10-2)))
(assert (not (= x4-2 x11-2)))
(assert (not (= x4-2 x12-2)))
(assert (not (= x4-2 x16-2)))
(assert (not (= x4-2 x18-2)))
(assert (not (= x5-2 x6-2)))
(assert (not (= x5-2 x10-2)))
(assert (not (= x5-2 x11-2)))
(assert (not (= x5-2 x12-2)))
(assert (not (= x5-2 x16-2)))
(assert (not (= x5-2 x18-2)))
(assert (not (= x6-2 x10-2)))
(assert (not (= x6-2 x11-2)))
(assert (not (= x6-2 x12-2)))
(assert (not (= x6-2 x16-2)))
(assert (not (= x6-2 x18-2)))
(assert (not (= x10-2 x11-2)))
(assert (not (= x10-2 x12-2)))
(assert (not (= x10-2 x16-2)))
(assert (not (= x10-2 x18-2)))
(assert (not (= x11-2 x12-2)))
(assert (not (= x11-2 x16-2)))
(assert (not (= x11-2 x18-2)))
(assert (not (= x12-2 x16-2)))
(assert (not (= x12-2 x18-2)))
(assert (not (= x16-2 x18-2)))

constrMHB: (assert(< x1-0 x2-0))
(assert(< x1-0 x39-0))
(assert(< x1-0 x76-0))
(assert(< x1-0 x80-0))
(assert(< x1-0 x2-0))
(assert(< x2-0 x39-0))
(assert(< x39-0 x76-0))
(assert(< x76-0 x80-0))
(assert(< x1-2 x4-2))
(assert(< x1-2 x5-2))
(assert(< x1-2 x6-2))
(assert(< x1-2 x10-2))
(assert(< x1-2 x11-2))
(assert(< x1-2 x12-2))
(assert(< x1-2 x16-2))
(assert(< x1-2 x18-2))
(assert(< x4-2 x18-2))
(assert(< x5-2 x18-2))
(assert(< x6-2 x18-2))
(assert(< x10-2 x18-2))
(assert(< x11-2 x18-2))
(assert(< x12-2 x18-2))
(assert(< x16-2 x18-2))
(assert(< x1-2 x4-2))
(assert(< x4-2 x5-2))
(assert(< x5-2 x6-2))
(assert(< x6-2 x10-2))
(assert(< x10-2 x11-2))
(assert(< x11-2 x12-2))
(assert(< x12-2 x16-2))
(assert(< x16-2 x18-2))
(assert(< x1-1 x7-1))
(assert(< x1-1 x8-1))
(assert(< x1-1 x9-1))
(assert(< x1-1 x10-1))
(assert(< x1-1 x18-1))
(assert(< x1-1 x19-1))
(assert(< x1-1 x20-1))
(assert(< x1-1 x21-1))
(assert(< x1-1 x22-1))
(assert(< x1-1 x24-1))
(assert(< x7-1 x24-1))
(assert(< x8-1 x24-1))
(assert(< x9-1 x24-1))
(assert(< x10-1 x24-1))
(assert(< x18-1 x24-1))
(assert(< x19-1 x24-1))
(assert(< x20-1 x24-1))
(assert(< x21-1 x24-1))
(assert(< x22-1 x24-1))
(assert(< x1-1 x7-1))
(assert(< x7-1 x8-1))
(assert(< x10-1 x18-1))
(assert(< x18-1 x19-1))
(assert(< x19-1 x20-1))
(assert(< x20-1 x21-1))
(assert(< x21-1 x22-1))
(assert(< x22-1 x24-1))

constrSync: (assert (< x2-0 x1-1 ))
(assert (< x39-0 x1-2 ))
(assert (< x24-1 x76-0 ))
(assert (< x18-2 x80-0 ))

violateStr: (assert (or (and (not (< x21-1 x4-2)
)(not (< x21-1 x10-2)
)(not (< x21-1 x16-2)
)   (< x10-1 x18-1)
(< x21-1 x22-1)
) (and (< x21-1 x4-2)
(< x21-1 x10-2)
(< x21-1 x16-2)
   (not (< x10-1 x18-1)
)(not (< x21-1 x22-1)
)) ))


  Switch Pair: Pair[Node: gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ , Node: gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ ]
  Depend Pair: Pair[Node: gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ , Node: gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ ]
  Schedule:
[31m    x1-0    gid: 1 #0   begin order: 0[0m
[31m    x2-0    gid: 2 #0   pc:0x429e2c start  -> #1 order: 2[0m
[31m    x39-0    gid: 39 #0   pc:0x429e2c start  -> #2 order: 523[0m
[32m    x1-1    gid: 1 #1   begin order: 490[0m
[32m    x9-1    gid: 9 #1   pc:0x4c344a W  addr:21875204  len: 4 value:1500 order:502 line:37 File:23-includ [0m
[32m    x10-1    gid: 10 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:1 order:503 line:39 File:23-includ [0m * Swap
[32m    x18-1    gid: 18 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:1 order: 512 line:34 File: 23-includ [0m
[32m    x19-1    gid: 19 #1   pc:0x4c33f8 W  addr:21875208  len: 4 value:1111 order:513 line:36 File:23-includ [0m
[32m    x20-1    gid: 20 #1   pc:0x4c344a W  addr:21875212  len: 4 value:1500 order:514 line:37 File:23-includ [0m
[33m    x1-2    gid: 1 #2   begin order: 1056[0m
[33m    x4-2    gid: 4 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1064 line:25 File: 23-includ [0m * Depend
[33m    x5-2    gid: 5 #2   pc:0x4c323f W  addr:21875200  len: 4 value:1111 order:1065 line:26 File:23-includ [0m * Depend
[32m    x7-1    gid: 7 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:0 order: 500 line:34 File: 23-includ [0m
[32m    x8-1    gid: 8 #1   pc:0x4c33f8 W  addr:21875200  len: 4 value:1111 order:501 line:36 File:23-includ [0m * Swap
[33m    x6-2    gid: 6 #2   pc:0x4c3295 W  addr:21875204  len: 4 value:1500 order:1066 line:27 File:23-includ [0m
[33m    x10-2    gid: 10 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1077 line:25 File: 23-includ [0m
[33m    x11-2    gid: 11 #2   pc:0x4c323f W  addr:21875208  len: 4 value:1111 order:1078 line:26 File:23-includ [0m
[33m    x12-2    gid: 12 #2   pc:0x4c3295 W  addr:21875212  len: 4 value:1500 order:1079 line:27 File:23-includ [0m
[33m    x16-2    gid: 16 #2   pc:0x4c31d6  R   addr:21875192  len: 4 value:2 order: 1085 line:25 File: 23-includ [0m
[32m    x21-1    gid: 21 #1   pc:0x4c3484 W  addr:21875192  len: 4 value:2 order:515 line:39 File:23-includ [0m
[32m    x22-1    gid: 22 #1   pc:0x4c338b  R   addr:21875192  len: 4 value:2 order: 518 line:34 File: 23-includ [0m
[32m    x24-1    gid: 24 #1   end order:521[0m
[31m    x76-0    76 #0   pc: 0x450cf8 Join   <- 1  order 1071[0m
[33m    x18-2    gid: 18 #2   end order:1088[0m
[31m    x80-0    80 #0   pc: 0x450cf8 Join   <- 2  order 1090[0m

